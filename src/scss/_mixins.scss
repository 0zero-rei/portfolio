@import './breakpoints';

@mixin classesFromMap($initialMap) {

  @each $prefix,
  $class in $initialMap {
    $property: map-get($map: $class, $key: 'property');
    $values: map-get($map: $class, $key: 'values');
    $needs-breakpoints: map-get($map: $class, $key: 'breakpoints');

    @each $suffix,
    $value in $values {
      .#{$prefix}-#{$suffix} {
        @if ($value) {
          #{$property}: #{$value};
        }

        @else {
          #{$property}: #{$suffix};
        }
      }

      @if $needs-breakpoints {
        @each $breakpoint in $breakpoints {

          $infix: map-get($map: $breakpoint, $key: 'infix');
          $size: map-get($map: $breakpoint, $key: 'size');

          @media screen and (min-width: #{$size}px) {
            .#{$prefix}-#{$infix}-#{$suffix} {
              @if ($value) {
                #{$property}: #{$value} !important;
              }

              @else {
                #{$property}: #{$suffix} !important;
              }
            }
          }
        }
      }

    }



  }

}

@mixin fontsFromMap($fontsMap) {
  @each $prefix,
  $font-class in $fontsMap {
    $font-name: map-get($map: $font-class, $key: 'font-name');
    $font-family: map-get($map: $font-class, $key: 'font-family');
    $weights: map-get($map: $font-class, $key: 'weights');
    $src: map-get($map: $font-class, $key: 'src');

    @if $src {
      @font-face {
        font-family:  #{$font-name} + ', ' + #{$font-family};
        src: url(#{$src});
      }
    }

    .font-#{$prefix} {
      font-family:  #{$font-name} + ', ' + #{$font-family} !important;
    }

    @each $suffix, $value in $weights {
      .font-#{$prefix}-#{$suffix} {
        font-family:  #{$font-name} + ', ' + #{$font-family} !important;

        @if $value {
          font-weight: $value !important;
        } @else {
          font-weight: $suffix !important;
        }
      }
    }


  }
}
